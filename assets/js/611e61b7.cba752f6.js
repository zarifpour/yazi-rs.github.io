"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[584],{9613:(e,t,i)=>{i.d(t,{Zo:()=>m,kt:()=>k});var n=i(9496);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function l(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),i=t;return e&&(i="function"==typeof e?e(t):l(l({},t),e)),i},m=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var i=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),u=s(i),d=a,k=u["".concat(p,".").concat(d)]||u[d]||c[d]||r;return i?n.createElement(k,l(l({ref:t},m),{},{components:i})):n.createElement(k,l({ref:t},m))}));function k(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=i.length,l=new Array(r);l[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:a,l[1]=o;for(var s=2;s<r;s++)l[s]=i[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,i)}d.displayName="MDXCreateElement"},7819:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var n=i(8957),a=(i(9496),i(9613));const r={sidebar_position:1,description:"Learn how to configure Yazi's basic functionality."},l="Yazi",o={unversionedId:"configuration/yazi",id:"configuration/yazi",title:"Yazi",description:"Learn how to configure Yazi's basic functionality.",source:"@site/usage/configuration/yazi.md",sourceDirName:"configuration",slug:"/configuration/yazi",permalink:"/usage/configuration/yazi",draft:!1,editUrl:"https://github.com/yazi-rs/yazi-rs.github.io/edit/main/usage/configuration/yazi.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Learn how to configure Yazi's basic functionality."},sidebar:"usageSidebar",previous:{title:"Configuration",permalink:"/usage/configuration/overview"},next:{title:"Keymap",permalink:"/usage/configuration/keymap"}},p={},s=[{value:"manager",id:"manager",level:2},{value:"preview",id:"preview",level:2},{value:"Ueberzug-specific",id:"ueberzug-specific",level:3},{value:"opener",id:"opener",level:2},{value:"open",id:"open",level:2},{value:"tasks",id:"tasks",level:2}],m={toc:s},u="wrapper";function c(e){let{components:t,...i}=e;return(0,a.kt)(u,(0,n.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"yazi"},"Yazi"),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"If you haven't created and used your own configuration file yet, please see ",(0,a.kt)("a",{parentName:"p",href:"/usage/configuration/overview"},"Configuration"),".")),(0,a.kt)("h2",{id:"manager"},"manager"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"layout: Manager layout by ratio, 3-element array"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"[1, 4, 3]"),": 1/8 width for parent, 4/8 width for current, 3/8 width for preview"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"sort_by: File sorting method"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},'"none"'),": Don't sort"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},'"alphabetical"'),": Sort alphabetically, e.g. ",(0,a.kt)("inlineCode",{parentName:"li"},"1.md")," < ",(0,a.kt)("inlineCode",{parentName:"li"},"10.md")," < ",(0,a.kt)("inlineCode",{parentName:"li"},"2.md")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},'"created"'),": Sort by creation time"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},'"modified"'),": Sort by last modified time"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},'"natural"'),": Sort naturally, e.g. ",(0,a.kt)("inlineCode",{parentName:"li"},"1.md")," < ",(0,a.kt)("inlineCode",{parentName:"li"},"2.md")," < ",(0,a.kt)("inlineCode",{parentName:"li"},"10.md")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},'"size"'),": Sort by file size"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"sort_sensitive: Sort case-sensitively"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"true"),": Case-sensitive"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"false"),": Case-insensitive"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"sort_reverse: Display files in reverse order"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"true"),": Reverse order"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"false"),": Normal order"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"sort_dir_first: Display directories first"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"true"),": Directories first"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"false"),": Respects ",(0,a.kt)("inlineCode",{parentName:"li"},"sort_by")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"sort_reverse")," only"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"linemode: Line mode"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},'"none"'),": No line mode."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},'"size"'),": Display the size of the file."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},'"permissions"'),": Display the permissions of the file."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},'"mtime"'),": Display the last modified time of the file.")),(0,a.kt)("p",{parentName:"li"},"In addition, you can also specify any 1 to 20 characters, and extend it within a UI plugin.\nWhich means you can implement your own linemode through the plugin by simply overriding the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/sxyazi/yazi/blob/main/plugin/preset/components/folder.lua"},(0,a.kt)("inlineCode",{parentName:"a"},"Folder:linemode")," method"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"show_hidden: Show hidden files"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"true"),": Show"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"false"),": Do not show"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"show_symlink: Show the path of the symlink file point to, after the filename"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"true"),": Show"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"false"),": Do not show")))),(0,a.kt)("h2",{id:"preview"},"preview"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"tab_size: Tab width"),(0,a.kt)("li",{parentName:"ul"},"max_width: Maximum preview width for images. Do a ",(0,a.kt)("inlineCode",{parentName:"li"},"yazi --clear-cache")," to take effect after changing this."),(0,a.kt)("li",{parentName:"ul"},"max_height: Maximum preview height for images. Do a ",(0,a.kt)("inlineCode",{parentName:"li"},"yazi --clear-cache")," to take effect after changing this."),(0,a.kt)("li",{parentName:"ul"},"cache_dir: The system cache directory is used by default, and the cached files will go away on a reboot automatically. If you want to make it more persistent, you can specify the cache directory manually as an absolute path.")),(0,a.kt)("h3",{id:"ueberzug-specific"},"Ueberzug-specific"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"ueberzug_scale (Float): Ueberzug image scaling ratio, ",(0,a.kt)("inlineCode",{parentName:"li"},"scale>1")," for enlargement, ",(0,a.kt)("inlineCode",{parentName:"li"},"scale<1")," for reduction. For example, ",(0,a.kt)("inlineCode",{parentName:"li"},"0.5")," indicates a reduction to half."),(0,a.kt)("li",{parentName:"ul"},"ueberzug_offset (",(0,a.kt)("inlineCode",{parentName:"li"},"[x, y, width, height]"),"): Ueberzug image offset, in cell units. For example, ",(0,a.kt)("inlineCode",{parentName:"li"},"[0.5, 0.5, -0.5, -0.5]")," indicates that the image is offset by half a cell in both directions, and the width and height are reduced by half a cell.")),(0,a.kt)("p",null,"This is useful for solving ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/jstkdng/ueberzugpp/issues/122"},"the bug of Ueberzug image size calculation"),"."),(0,a.kt)("p",null,"If your monitor has a ",(0,a.kt)("inlineCode",{parentName:"p"},"2.0")," scale factor, and is running on Wayland under Hyprland, you may need to set ",(0,a.kt)("inlineCode",{parentName:"p"},"ueberzug_scale: 0.5"),", and adjust the value of ",(0,a.kt)("inlineCode",{parentName:"p"},"ueberzug_offset")," according to your case, to offset this issue."),(0,a.kt)("h2",{id:"opener"},"opener"),(0,a.kt)("p",null,"Configure available openers, for example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[opener]\narchive = [\n    { exec = \'unar "$1"\', desc = "Extract here" },\n]\ntext = [\n    { exec = \'nvim "$@"\', block = true },\n]\n# ...\n')),(0,a.kt)("p",null,"Available parameters are as follows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"exec: The command to open the selected files, with the following variables available:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$n")," (Unix) / ",(0,a.kt)("inlineCode",{parentName:"li"},"%n")," (Windows): The N-th selected file, starting from 1"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"$@")," (Unix) / ",(0,a.kt)("inlineCode",{parentName:"li"},"%*")," (Windows): All selected files"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"foo"),": Literal string to be passed"))),(0,a.kt)("li",{parentName:"ul"},"block (Boolean): Open in a blocking manner. After setting this, Yazi will hide into a secondary screen and display the program on the main screen until it exits. During this time, it can receive I/O signals, which is useful for interactive programs."),(0,a.kt)("li",{parentName:"ul"},"orphan (Boolean): Keep the process running even if Yazi has exited."),(0,a.kt)("li",{parentName:"ul"},"desc: Description of the opener, displayed in the selection menu."),(0,a.kt)("li",{parentName:"ul"},"for: Optional. This opener is only available on this system; when not specified, it's available on all systems. Available values:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"unix"),": Linux and macOS"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"windows"),": Windows"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"linux"),": Linux"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"macos"),": macOS")))),(0,a.kt)("h2",{id:"open"},"open"),(0,a.kt)("p",null,"Set rules for opening specific files, for example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[open]\nrules = [\n    { mime = "text/*", use = "text" },\n    { mime = "image/*", use = "image" },\n\n    # { mime = "application/json", use = "text" },\n    { name = "*.json", use = "text" },\n\n    # Multiple openers for a single rule\n    { name = "*.html", use = [ "browser", "text" ] },\n]\n')),(0,a.kt)("p",null,"Available rule parameters are as follows:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"name (String): Glob expression for matching the file name. Case insensitive by default, add ",(0,a.kt)("inlineCode",{parentName:"li"},"\\s")," to the beginning to make it sensitive."),(0,a.kt)("li",{parentName:"ul"},"mime (String): Glob expression for matching the MIME type. Case insensitive by default, add ",(0,a.kt)("inlineCode",{parentName:"li"},"\\s")," to the beginning to make it sensitive."),(0,a.kt)("li",{parentName:"ul"},"use (String): Opener name corresponding to the names in the opener section.")),(0,a.kt)("h2",{id:"tasks"},"tasks"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"micro_workers: Maximum number of concurrent micro-tasks"),(0,a.kt)("li",{parentName:"ul"},"macro_workers: Maximum number of concurrent macro-tasks"),(0,a.kt)("li",{parentName:"ul"},"bizarre_retry: Maximum number of retries when a bizarre failure occurs")))}c.isMDXComponent=!0}}]);