"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[638],{9613:(e,t,l)=>{l.d(t,{Zo:()=>s,kt:()=>c});var a=l(9496);function n(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function r(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,a)}return l}function i(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?r(Object(l),!0).forEach((function(t){n(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function o(e,t){if(null==e)return{};var l,a,n=function(e,t){if(null==e)return{};var l,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)l=r[a],t.indexOf(l)>=0||(n[l]=e[l]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)l=r[a],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(n[l]=e[l])}return n}var p=a.createContext({}),u=function(e){var t=a.useContext(p),l=t;return e&&(l="function"==typeof e?e(t):i(i({},t),e)),l},s=function(e){var t=u(e.components);return a.createElement(p.Provider,{value:t},e.children)},m="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var l=e.components,n=e.mdxType,r=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=u(l),d=n,c=m["".concat(p,".").concat(d)]||m[d]||k[d]||r;return l?a.createElement(c,i(i({ref:t},s),{},{components:l})):a.createElement(c,i({ref:t},s))}));function c(e,t){var l=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=l.length,i=new Array(r);i[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[m]="string"==typeof e?e:n,i[1]=o;for(var u=2;u<r;u++)i[u]=l[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,l)}d.displayName="MDXCreateElement"},514:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>k,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var a=l(8957),n=(l(9496),l(9613));const r={sidebar_position:3,description:"Learn how to configure your Yazi theme."},i="Theme",o={unversionedId:"configuration/theme",id:"configuration/theme",title:"Theme",description:"Learn how to configure your Yazi theme.",source:"@site/usage/configuration/theme.md",sourceDirName:"configuration",slug:"/configuration/theme",permalink:"/usage/configuration/theme",draft:!1,editUrl:"https://github.com/yazi-rs/yazi-rs.github.io/edit/main/usage/configuration/theme.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,description:"Learn how to configure your Yazi theme."},sidebar:"usageSidebar",previous:{title:"Keymap",permalink:"/usage/configuration/keymap"},next:{title:"Frequently Asked Questions",permalink:"/usage/faq"}},p={},u=[{value:"Types",id:"types",level:2},{value:"Manager",id:"manager",level:2},{value:"Status",id:"status",level:2},{value:"Input",id:"input",level:2},{value:"Select",id:"select",level:2},{value:"Tasks",id:"tasks",level:2},{value:"Which",id:"which",level:2},{value:"Help",id:"help",level:2},{value:"Filetype",id:"filetype",level:2},{value:"Icons",id:"icons",level:2}],s={toc:u},m="wrapper";function k(e){let{components:t,...l}=e;return(0,n.kt)(m,(0,a.Z)({},s,l,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"theme"},"Theme"),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"If you're looking for ready-made themes and don't want to create one yourself, check out ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/yazi-rs/themes"},"yazi-rs/themes")," repo.")),(0,n.kt)("h2",{id:"types"},"Types"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Color: A color. It can be in Hex format with RGB values, such as ",(0,n.kt)("inlineCode",{parentName:"p"},"#484D66"),". Or can be one of the following 17 values:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"reset"),(0,n.kt)("li",{parentName:"ul"},"black"),(0,n.kt)("li",{parentName:"ul"},"white"),(0,n.kt)("li",{parentName:"ul"},"red"),(0,n.kt)("li",{parentName:"ul"},"lightred"),(0,n.kt)("li",{parentName:"ul"},"green"),(0,n.kt)("li",{parentName:"ul"},"lightgreen"),(0,n.kt)("li",{parentName:"ul"},"yellow"),(0,n.kt)("li",{parentName:"ul"},"lightyellow"),(0,n.kt)("li",{parentName:"ul"},"blue"),(0,n.kt)("li",{parentName:"ul"},"lightblue"),(0,n.kt)("li",{parentName:"ul"},"magenta"),(0,n.kt)("li",{parentName:"ul"},"lightmagenta"),(0,n.kt)("li",{parentName:"ul"},"cyan"),(0,n.kt)("li",{parentName:"ul"},"lightcyan"),(0,n.kt)("li",{parentName:"ul"},"gray"),(0,n.kt)("li",{parentName:"ul"},"darkgray"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Style: Appears in a format similar to ",(0,n.kt)("inlineCode",{parentName:"p"},'{ fg = "#e4e4e4", bg = "black", ... }'),", and supports the following properties:"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"fg (Color): Foreground color"),(0,n.kt)("li",{parentName:"ul"},"bg (Color): Background color"),(0,n.kt)("li",{parentName:"ul"},"bold (Boolean): Bold"),(0,n.kt)("li",{parentName:"ul"},"dim (Boolean): Dim (not supported by all terminals)"),(0,n.kt)("li",{parentName:"ul"},"italic (Boolean): Italic"),(0,n.kt)("li",{parentName:"ul"},"underline (Boolean): Underline"),(0,n.kt)("li",{parentName:"ul"},"blink (Boolean): Blink"),(0,n.kt)("li",{parentName:"ul"},"blink_rapid (Boolean): Rapid blink"),(0,n.kt)("li",{parentName:"ul"},"reversed (Boolean): Reversed foreground and background colors"),(0,n.kt)("li",{parentName:"ul"},"hidden (Boolean): Hidden"),(0,n.kt)("li",{parentName:"ul"},"crossed (Boolean): Crossed out")))),(0,n.kt)("h2",{id:"manager"},"Manager"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"cwd (Style): CWD text style.")),(0,n.kt)("p",null,"Hovered:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"hovered (Style): Hovered file style."),(0,n.kt)("li",{parentName:"ul"},"preview_hovered (Style): Hovered file style, in the preview pane.")),(0,n.kt)("p",null,"Find: The ",(0,n.kt)("inlineCode",{parentName:"p"},"find")," feature"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"find_keyword (Style): Style of the highlighted portion in the filename."),(0,n.kt)("li",{parentName:"ul"},"find_position (Style): Style of current file location in all found files to the right of the filename.")),(0,n.kt)("p",null,"Marker: Color block on the left side separator line in the filename."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"marker_selected (Style): Selected file marker style."),(0,n.kt)("li",{parentName:"ul"},"marker_copied (Style): Copied file marker style."),(0,n.kt)("li",{parentName:"ul"},"marker_cut (Style): Cut file marker style.")),(0,n.kt)("p",null,"Tab: Tab bar"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"tab_active (Style): Active tab style."),(0,n.kt)("li",{parentName:"ul"},"tab_inactive (Style): Inactive tab style."),(0,n.kt)("li",{parentName:"ul"},"tab_width (Style): Tab maximum width. When set to a value greater than 2, the remaining space will be filled with the tab name, which is current directory name.")),(0,n.kt)("p",null,"Border:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"border_symbol (String): Border symbol. e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},'"\u2502"'),"."),(0,n.kt)("li",{parentName:"ul"},"border_style (Style): Border style.")),(0,n.kt)("p",null,"Offset:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"folder_offset (",(0,n.kt)("inlineCode",{parentName:"li"},"[top, right, bottom, left]"),"): Folder layout offset. e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"[ 1, 0, 1, 0 ]"),"."),(0,n.kt)("li",{parentName:"ul"},"preview_offset (",(0,n.kt)("inlineCode",{parentName:"li"},"[top, right, bottom, left]"),"): Preview layout offset. e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"[ 1, 1, 1, 1 ]"),".")),(0,n.kt)("p",null,"Highlighting: The built-in syntax highlighting feature"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"syntect_theme (String): Theme file path. Since Yazi and ",(0,n.kt)("inlineCode",{parentName:"li"},"bat")," use the same highlighter, so you can directly use bat's theme files, such as ",(0,n.kt)("inlineCode",{parentName:"li"},"~/.config/bat/themes/Catppuccino-mocha.tmTheme"),".")),(0,n.kt)("h2",{id:"status"},"Status"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"separator_open (String): Opening separator symbol. e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},'"["'),"."),(0,n.kt)("li",{parentName:"ul"},"separator_close (String): Closing separator symbol. e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},'"]"'),"."),(0,n.kt)("li",{parentName:"ul"},"separator_style (Style): Separator style.")),(0,n.kt)("p",null,"Mode"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"mode_normal (Style): Normal mode style."),(0,n.kt)("li",{parentName:"ul"},"mode_select (Style): Select mode style."),(0,n.kt)("li",{parentName:"ul"},"mode_unset (Style): Unset mode style.")),(0,n.kt)("p",null,"Progress"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"progress_label (Style): Progress label style."),(0,n.kt)("li",{parentName:"ul"},"progress_normal (Style): Style of the progress bar when it is not in an error state."),(0,n.kt)("li",{parentName:"ul"},"progress_error (Style): Style of the progress bar when an error occurs.")),(0,n.kt)("p",null,"Permissions"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"permissions_t (Style): File type."),(0,n.kt)("li",{parentName:"ul"},"permissions_r (Style): Read permission."),(0,n.kt)("li",{parentName:"ul"},"permissions_w (Style): Write permission."),(0,n.kt)("li",{parentName:"ul"},"permissions_x (Style): Execute permission."),(0,n.kt)("li",{parentName:"ul"},"permissions_s (Style): ",(0,n.kt)("inlineCode",{parentName:"li"},"-")," separator.")),(0,n.kt)("h2",{id:"input"},"Input"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"border (Style): Border style."),(0,n.kt)("li",{parentName:"ul"},"title (Style): Title style."),(0,n.kt)("li",{parentName:"ul"},"value (Style): Value style."),(0,n.kt)("li",{parentName:"ul"},"selected (Style): Selected value style.")),(0,n.kt)("h2",{id:"select"},"Select"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"border (Style): Border style."),(0,n.kt)("li",{parentName:"ul"},"active (Style): selected item style."),(0,n.kt)("li",{parentName:"ul"},"inactive (Style): unselected item style.")),(0,n.kt)("h2",{id:"tasks"},"Tasks"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"border (Style): Border style."),(0,n.kt)("li",{parentName:"ul"},"title (Style): Title style."),(0,n.kt)("li",{parentName:"ul"},"hovered (Style): Hovered item style.")),(0,n.kt)("h2",{id:"which"},"Which"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"mask (Style): Mask style."),(0,n.kt)("li",{parentName:"ul"},"cand (Style): Candidate key style."),(0,n.kt)("li",{parentName:"ul"},"rest (Style): Rest key style."),(0,n.kt)("li",{parentName:"ul"},"desc (Style): Description style."),(0,n.kt)("li",{parentName:"ul"},"separator (String): Separator symbol. e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},'" -> "'),"."),(0,n.kt)("li",{parentName:"ul"},"separator_style (Style): Separator style.")),(0,n.kt)("h2",{id:"help"},"Help"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"on (Style): Key column style."),(0,n.kt)("li",{parentName:"ul"},"exec (Style): Command column style."),(0,n.kt)("li",{parentName:"ul"},"desc (Style): Description column style."),(0,n.kt)("li",{parentName:"ul"},"hovered (Style): Hovered item style."),(0,n.kt)("li",{parentName:"ul"},"footer (Style): Footer style.")),(0,n.kt)("h2",{id:"filetype"},"Filetype"),(0,n.kt)("p",null,"Set file list item display styles for specific file types, supporting matching by name and mime-type:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-toml"},'[filetype]\nrules = [\n    # Images\n    { mime = "image/*", fg = "cyan" },\n\n    # Videos\n    { mime = "video/*", fg = "yellow" },\n    { mime = "audio/*", fg = "yellow" },\n\n    # ...\n\n    # Fallback\n    # { name = "*", fg = "white" },\n    { name = "*/", fg = "blue" }\n]\n')),(0,n.kt)("p",null,"Each rule supports complete ",(0,n.kt)("a",{parentName:"p",href:"#Types"},"Style properties"),". There are two special rule:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'name = "*"')," matches all files."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},'name = "*/"')," matches all directories.")),(0,n.kt)("h2",{id:"icons"},"Icons"),(0,n.kt)("p",null,"Display different icons based on file name rules, noting that the ",(0,n.kt)("inlineCode",{parentName:"p"},"/")," after the name signifies that it must be a directory."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-toml"},'[icons]\n"Desktop/" = "\uf108"\n"*.rs"     = "\ue7a8"\n# ...\n\n# Default\n"*"  = "\uf15b"\n"*/" = "\uf115"\n')),(0,n.kt)("p",null,"Similarly, ",(0,n.kt)("inlineCode",{parentName:"p"},"*")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"*/")," can be used for fallback matching all files and all directories."),(0,n.kt)("p",null,"The above rules use icons from ",(0,n.kt)("a",{parentName:"p",href:"https://www.nerdfonts.com"},"Nerd Fonts"),", and they will not display properly if you don't have a Nerd Font installed."))}k.isMDXComponent=!0}}]);